<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create the sound emitter
global.audio_em = audio_emitter_create();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.game_paused = false;      // If game is paused or not
global.level = 1;
// Font ///////////////////////////////////////////////////////////////////////
globalvar FONT;
FONT = font_add_sprite(sFont, ord(" "), 0, 1);

draw_set_color(c_white);
draw_set_font(FONT);

fontAng = 0;
fontDir = 1;
///////////////////////////////////////////////////////////////////////////////

global.pressL = false;
global.pressR = false;
global.pressJ = false;
global.pressA = false;
global.pressD = false;

global.daybefore = current_day;
global.hourbefore = current_hour;
global.minutebefore = current_minute;
global.secondbefore = current_second;
if !instance_exists(oMoon) and !room = room83 and !room = room84 and !room = room85 and !room = room86 and !room = room87 {
instance_create(0,96,oMoon);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Input variables for debug room traversal
var kRestart, kExit, kPrev, kNext;

kRestart = keyboard_check_pressed(ord('R'));
kExit    = keyboard_check_pressed(vk_escape);
//kPrev    = keyboard_check_pressed(vk_space);
//kNext    = keyboard_check_pressed(vk_enter);
//kBack    = keyboard_check_pressed(vk_backspace);

if (kRestart)
    room_restart();
if (kExit)
    scr_savegameend();
    
// Iterate through rooms backward
/*if (kPrev) {
    if (room == room_first)
        room_goto(room_last);
    else
        room_goto_previous();
}

// Iterate through rooms forwards
if (kNext) {
    if (room == room_last)
        room_goto(room_first);
    else
        room_goto_next();
}
*/
//Back
/*if (kBack) {
    if !room = roomStart {       
        global.target = roomStart;
        instance_create(0,0,oFxRoomGoToTarget); 
    }
}*/
// Toggle touch controls
/*
if (keyboard_check_pressed(ord('P'))) {
    if (instance_exists(oTouchCompatible))
        with (oTouchCompatible)
            instance_destroy();
    else
        instance_create(0, 0, oTouchCompatible);
}
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy the emitter
audio_emitter_free(global.audio_em);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_savegame();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_loadgame();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_text(view_xview[0] + 16, view_yview[0] + 16, string("Press 'P' to toggle touch controls on/off"));
/*
if (instance_exists(oTouchCompatible)) {
    if instance_exists(oCrateBlood){
        draw_sprite(sDownArrow, 2, view_xview[0] + 640 -96 - 8, view_yview[0] + 360 - 64 -8); 
        draw_sprite(sLeftArrow, 2, view_xview[0] + 8, view_yview[0] + 360 - 64 -8 );  
        draw_sprite(sRightArrow, 2, view_xview[0] + 8 + 96 + 8, view_yview[0] + 360 - 64 -8 );
        draw_sprite(sAtkButton, 2, view_xview[0] + 640 - 96 - 8 - 96 - 8, view_yview[0] + 360 - 64 -8); 
        draw_sprite(sJumpButton, 2, view_xview[0] + 640 - 96 - 8, view_yview[0] + 360 - 64 -8 - 64 - 8); 
    }else{
    if global.pressD = true {
    draw_sprite(sDownArrow, 1, view_xview[0] + 640 -96 - 8,view_yview[0] + 360 - 64 -8); 
    }else{
    draw_sprite(sDownArrow, 0, view_xview[0] + 640 -96 - 8,view_yview[0] + 360 - 64 -8);    
    }
    if global.pressL = true {
    draw_sprite(sLeftArrow, 1, view_xview[0] + 8, view_yview[0] + 360 - 64 -8 ); 
    }else{
    draw_sprite(sLeftArrow, 0, view_xview[0] + 8, view_yview[0] + 360 - 64 -8 );     
    }
    if global.pressR = true {
    draw_sprite(sRightArrow, 1, view_xview[0] + 8 + 96 + 8, view_yview[0] + 360 - 64 -8 );
    }else{ 
    draw_sprite(sRightArrow, 0, view_xview[0] + 8 + 96 + 8, view_yview[0] + 360 - 64 -8 );
    } 
    if global.pressA = true {
    draw_sprite(sAtkButton, 1, view_xview[0] + 640 - 96 - 8 - 96 - 8, view_yview[0] + 360 - 64 -8); 
    }else{ 
    draw_sprite(sAtkButton, 0, view_xview[0] + 640 - 96 - 8 - 96 - 8, view_yview[0] + 360 - 64 -8);  
    } 
    if global.pressJ = true {
    draw_sprite(sJumpButton, 1, view_xview[0] + 640 - 96 - 8, view_yview[0] + 360 - 64 -8 - 64 - 8);
    }else{ 
    draw_sprite(sJumpButton, 0, view_xview[0] + 640 - 96 - 8, view_yview[0] + 360 - 64 -8 - 64 - 8);
    } 
  }  

}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*draw_text(200,120,global.daybefore);
draw_text(200,140,global.hourbefore);
draw_text(200,160,global.minutebefore);
draw_text(200,180,global.secondbefore);
draw_text(260,150,global.timediference);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    if !room = roomStart {       
        global.target = roomStart;
        instance_create(0,0,oFxRoomGoToBack); 
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
